name: CI/CD

on:
  - push
  - pull_request

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test_devportal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3
          bundler-cache: true
      - run: bundle exec jekyll build
      - run: bundle exec rake test_ci
      - uses: actions/upload-artifact@v4
        with:
          name: _devportal
          retention-days: 7
          path: |
            _site/
            firebase.json

  build_test_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ePages-de/epages-docs
          ref: master
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3
          bundler-cache: true
      - run: bundle exec jekyll build
      - run: bundle exec rake test_ci
      - uses: actions/upload-artifact@v4
        with:
          name: _docs
          retention-days: 7
          path: |
            _site/

  combine_projets:
    if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') }}
    runs-on: ubuntu-latest
    needs:
      - build_test_devportal
      - build_test_docs
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: _devportal
      - uses: actions/download-artifact@v4
        with:
          name: _docs
          path: ./_docs
      - run: rsync -abviuzP _docs/ _site/
      - uses: actions/upload-artifact@v4
        with:
          name: _site
          retention-days: 7
          path: |
            _site/
            firebase.json

  deploy_staging:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    needs:
      - combine_projets
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: _site
      - run: curl -sL firebase.tools | bash
      - run: firebase deploy --project $FIREBASE_PROJECT --token=$FIREBASE_TOKEN --non-interactive
        env:
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_APP_NAME_STAGING }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy_production:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - combine_projets
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: _site
      - run: curl -sL firebase.tools | bash
      - run: firebase deploy --project $FIREBASE_PROJECT --token=$FIREBASE_TOKEN --non-interactive
        env:
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_APP_NAME_PRODUCTION }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
